# -*- coding: utf-8 -*-
"""Pandas2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GIprCSVz34y031KR-oCo9yDTr1OSISYf
"""

import pandas as pd


#öncelikle veri dosyasını okumam lazım
"""print(pd.read_csv('ReviewContent.csv'))"""
#her zaman csv dosyalarını okumak bu kadar olmaz bu yüzden parametre ekliyoruz
"""print(pd.read_csv('ReviewContent.csv',encoding='utf-8',engine='python'))"""
review_content=pd.read_csv('ReviewContent.csv', usecols=['Review ID'],   encoding='utf-8', engine='python')

print(review_content)
#default olarak dataframe alıyor bunu bizim seriese çevirmemiz için squeeze=True diyoruz parametre olarak ekliyouz ama hala dataframe tipi alıyoruz şimdi napmalıyız
#İlgilenmek istediğimiz  sutunu belirtmeliyiz usecols=['Review ID'] mesela

print(review_content.head())
#varsılayan olarak yalnızca üstteki 5 veriyi veriyor içine parametre olarak ilk baştan kaç tane istiyorsak onu yazabiliriz.
print()
print(review_content.tail())
#buda en sondan 5 veriyi veriyor parametre olarak içine kaç tane olacağını yazabiliriz tail kuyruk demek ayrıca
#var olan seriyi değiştirmiyoruz var olanının üstünden geçiyoruz sadece
print()

print(review_content.head(10))
print()
review_content.sort_values('Review ID').inplace=True
#mesela ben bu sıralamayı indexe göre değilde valueye göre istersem
print(review_content.sort_values('Review ID').head(10))
#verilieri tüm veriler arasından küçükten büyüğe doğru sıraladı """

review_content.sort_index(ascending=False,inplace=True)
#değişikliğin kalıcı olması için inplace fonksiyonunu çağırıyoruz
print(review_content.head(10))
print()
print()
#değere göre sıraladıktan sonra normal halini de tekrardan görmek istiyorsam ne yapıcam peki ???
review_content.sort_values('Review ID',ascending=False,inplace=True)
print(review_content.head(10))
print()
print()
review_content.sort_index(inplace=True)
print(review_content.head(10))

print(review_content.head(10))
print()