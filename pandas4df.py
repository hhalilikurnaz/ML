# -*- coding: utf-8 -*-
"""Pandas4DF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JFlWvpl8gdtre_M5bEXjNXYDx2a7S7BI
"""

import pandas as pd

students={'Hale':pd.Series(data=[25,'Female','CE',58],index=['age','gender','dp','height']),
          'Aslı':pd.Series(data=[45,'Female','SE',53],index=['age','gender','dp','height']),
          'Elif':pd.Series(data=[36,'Female','EEE',62],index=['age','gender','dp','height'])

}
print(students)
print(type(students))
print()
print()

df_students=pd.DataFrame(students)
print(df_students)
print(type(df_students))

#Yalnızca tek bir sutundaki bilgilere ulaşmak istiyorsam bu formatı uyguluyorum birden fazla ise parametreye , atarak diğer stunun adınıda yazacağız
df_students_2=pd.DataFrame(students,columns=['Hale'])
print(df_students_2)
print(type(df_students_2))

print()
#sadece o indexteki verileri istiyorsam da bu formatı kullanıyorum
df_students_3=pd.DataFrame(students,index=['age','gender'])
print(df_students_3)
print(type(df_students_3))
print()
print()

#hem  istediğimiz sutun hem de  istediğimiz satırlara ulaşalım
#constructor olarak studens dictionarysini kullanıyoruz

df_student_4=pd.DataFrame(students,columns=['Hale','Aslı'],index=['age','height'])
print(df_student_4)

print()
print()
print()
#istediğimiz sutundan veri çekme formatı
print(df_students['Hale'])
print()
print(type(df_students[    ['Hale']    ]))
#bu ise dataframe döndürüyor çünkü tek boyutlu değil hem sutun hem de satır indexi mevcut burada

print()
#aynı anda 2 sutuna ulaşmak istiyorsak liste şeklinde yazmamız lazım
print(df_students[['Hale','Aslı']])
print()
#aynı anda satırlara ulaşmak için loc ve iloc metodlarını kullanıyoruz
print(df_students.loc[['age','gender']])
print()
print(df_students.iloc[0:2])
print()

#PEKİ HERHANGİ Bİ TEKİL ELEMANA NASIL ULAŞACAM
#DF[ROW] [ROW] ÖNCE SUTUN SONRA SATIR

print(df_students['Hale']['age'])

#elimdeki dataframeye yeni sütunlarda ekleyebilirim satırlarda ekleyebilirim
df_students['Fatih']=pd.Series(data=[30,'Male','CE',180],index=['age','gender','dp','height'])
print(df_students)

print()
#yeni bir sutunu diğer 2 sutunu toplayarak bu şekilde yazabiliyoruz
df_students['Emre']=df_students['Aslı']+df_students['Fatih']
print(df_students)

#satır eklemek için yapacaımız şey şu satırı yeni bir df' e ekliyoruz
"""
new_row=pd.DataFrame({'Hale':'Kurnaz','Aslı':'Pezevenk','Elif':'Sikişgen'},index=['surname'])
df_students=df_students.append(new_row)
#yeni sutunu appendd ediyoruz
print(df_students)"""
print()
print()
#yeni veri ekledik sutun ismini verip.
df_students['İbrahim']=[23,'M','ELM',190]
print(df_students)
print()
print()

#var olan satır ya da sutünları çıkartabiliriz
#pop ile yalnızca col sutünları çıkarabiliyoruz
#drop hem satır hem sutunları çıkarabiliyoruz
df_students.pop('Fatih')
print(df_students)


print()
df_students.drop(['Hale'],axis=1,inplace=True)
print(df_students)

students={'Hale':pd.Series(data=[25,'Kurnaz','CE',161],index=['age','surname','department','height']),
          'Aslı':pd.Series(data=[45,'F','SE',83],index=['age','gender','department','weight']),
          'Elif':pd.Series(data=[36,'F','EEE',170],index=['age','gender','department','height'])

          }
df_students=pd.DataFrame(students)
print(df_students)
#isnull metodu() verinin var olup olmamasına göre true ya da false değerler döndürecek veri yoksa true değeri döndürüyor varsa false değeri döndürüyor

print()
x=df_students.isnull()
print(x)
print(type(x))
print()
#her bir sutun için kaç tane null değeri varsa onun seri yapısını aldık yani sayısını aldık
y=df_students.isnull().sum()
print(y)
print(type(y))

print()
#toplam null değerini bulmak için
z=df_students.isnull().sum().sum()
print(z)
print(type(z))
print()
#notnull null olmayan yani nullsa true null değilse false döndürüyor

a=df_students.notnull()
print(a)
print(type(a))
print()
b=df_students.notnull().sum()
print(b)
print(type(b))
print()
c=df_students.notnull().sum().sum()
print(c)
print(type(c))
print()


#null değerlerinden kurtulmak için
#dropna metodunu kullanıyoruz

c=df_students.dropna()
print(c)
print()

#tüm verier null olduğu zaman o satırı komple sil diyoruz.
d=df_students.dropna(how="all")
print(d)
print()


#tresh parametresini kullanarak yalnızca o satırda 1 tane none olana kadar devam etsin 2 tane none olan satırların silinmesini istiyorum
h=df_students.dropna(thresh=2)
print(h)
print()

#axix = bizim vereceğimiz sayı ya da rakam ne demek ?  axisis = 0 olduğu zaman default olarak içinde none değeri olan satırları siliyor
#axsis=1 olduğu zaman ise none değerleri olan sutunları silmeye başlıyor
f=df_students.dropna(axis=0)
print(f)
print()

#bazen none değerlerinin olduğu yerlere farklı değerler koymak ya da eklemek isteriz
k=df_students.fillna(method='ffill',axis=0)
#axis 0 olduğu için önceki satıra göre haraket ediyor
#ffill metodu ile de önceki satırı kopyalayıp none yerine yapıştırıyor.
print(k)
print()
z=df_students.fillna(method='ffill',axis=1)
print(z)