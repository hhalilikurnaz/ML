# -*- coding: utf-8 -*-
"""Youtube makine Öğrenmesi Dersleri.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CnWyWCBv-GK-4ZeRoFA7RGxHSGjt45je
"""

#DERS 1
#Regresyon
#makine öğrenmesinde kullanılan bir model tipi
#aslında 2 tane vardır regresyon ve sınıflandırma olarak 2 tane modelimiz vardır tabi bunların alt modelleri de vardır

#Regresyonda sayısal bir akış içersindeki aralık buluruz tercih yapmayız
#Sınıflandırma da ise nokta atışı bir kategori bulunuyor

#y=ax+b formulu kullanılır
#Y=tahmin etmek istediğimiz ver
#X ise  tahimin etmek istediğimiz veri için diğer veriler
#A ise  katsayısı x'in
#B ise sabit zaman zaman belli şeyler sabittir onu bulup eklemek lazım

#multilineer regresyon çok boyutlu
#y=b+m1x1+m2x2+m3x3+....
#y bağımlı değişken x'e bağlı değişken x bağımsız değişken

#EĞER MAKİNE ÖĞRENMESİ ALANINDA ÇLIŞMAK İSTİYORSAM CYLEDLEARN

#bir kütüphane çağırıyorsak import ...
#bir kütüphaneden bir parçayı çağırıyorsak from ...
#bir kütüphane içindeki bir modülün içersindeki bir şeyi çağırmak istiyorsam
#from sklearn.lineer_model import LineerRegression

from sklearn.linear_model import LinearRegression
import pandas as pd

#  y = mx+b
df=pd.read_csv("student.csv")

df.head(4)
#ilk 4 satırı getir dedik

#burada neyi tahmin edeceğiz öğrencinin çalışma saatine ve sınıfına göre sınavdan kaç alacağını tahmin edeceğiz
#y=a1x1+a2x2+b formatını kullacağız
#Mesela biz burda x leri yani değişkenleri biliyoruz ama katsayılarını yani a ları bilmiyoruz bunuda yukarıda çağırdığımız kütüphaneden LinnerRegression bizim için bulacak

y=df["Marks"]
x=df[["number_courses","time_study"]]

#data hakkında bilgi vermek istiyorsak
df.info()

l=LinearRegression()
model=l.fit(x,y)
#fit öğrenmek demek aklımızda bulunsun

#predict prediction'dan geliyor tahmin etmek demek

model.predict([[3,3]])
#ilk değişken, ikinci değişken
#yani 4.sınıf 4 saat çalışan bir öğrenci kaç alır

df["Marks"].max()

#kaç oranında başarılı olduğuna bu şekilde bakıyoruz
model.score(x,y)

df.columns=["sinif","saat","puan"]
df.head(5)

y=df[["puan"]]
x=df[["sinif","saat"]]

lm=LinearRegression()
model=lm.fit(x,y)

#her bir sabitin katsayısını veriyor bize
model.coef_

#b'yi bulan(sabit)
model.intercept_

model.predict([[4,5]])

s1=model.predict([[3,4.508]])[0]

(19.202-s1)/19.202
#sapma payını buluyoruz

#algoritma ile ml arasındaki fark
#ml eldeki veriye göre algoritma ise  formule bağlı çalışır extra dataya ihtiyaç yoktur.

