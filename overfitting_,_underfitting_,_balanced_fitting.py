# -*- coding: utf-8 -*-
"""Overfitting , Underfitting , Balanced Fitting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YBpic_CutZNU6QdHVISXXIU46W-WUW-g
"""

import pandas as pd ; import numpy as np
import seaborn as sns
#seaborn veri görselleştirme kütüphanesidir
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df=sns.load_dataset("diamonds")

df.head(3)

#1 ne yapmam gerekiyor
#kategorisel verileri çevirmem gerekiyor
df=pd.get_dummies(df,columns=["cut","color","clarity"],drop_first=True)

df=df.astype(int)
df.head(3)

y=df['price']
x=df.drop("price",axis=1)

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=19,test_size=0.76)

#modeli oluşturuyorum
lm=LinearRegression()
model=lm.fit(x_train,y_train)

model.score(x_test,y_test)

model.score(x_train,y_train)

df.info()

#test ile train scorları arasındaki fark ne kadar az ise o kadar uyumlu öğrenmiştir
#test ile train scorları arasındaki fark ne kadar fazla ise overfitting durumudur.Ezberlemiştir

#UnderFitting az öğrenme az uyum.
#OverFitting çok öğrenme çok uyum .(öğrenmek değilde ezber kavramı daha uygun sadece elindeki verileri beilebiliyor dışarıdan veri geldiğinde patlayabiliyor)
#BalancedFitting dengeli öğrenme dengeli uyum.(En çok kullanılan şekil parabolleştirme.Lineer olmayabiliyor )

#Peki nerden anları under over balanced fitting olduğunu
#score düşükse underfitting'dir genellikle
#modeli karşılaştırırken skore göre karşılaştırma.Eski skoruna göre karşılaştır