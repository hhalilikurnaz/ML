# -*- coding: utf-8 -*-
"""VeriFiltrelemePandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18uCEBxPu5dIQGHRf0RRxpDuKdj8EEJFg
"""

import pandas as pd

"""pd.set_option('display.max_columns', None)"""
#maksimum sutunları göster diyoruz burada



review=pd.read_csv('ReviewContent.csv')
print(review['City'])
#dataframe'den yalnızca city ile ilgili bilgileri getir
#filtreleme yapmak istesek mesela

print(review["City"]=="London")
#yalnızca şehir olan 'londra' verilerini getir diyoruz
print()
print(review[review["City"]=="London"])
#şehir bilgisi london true olduğu sürece  bana o satır bilgisini getir diyoruz

review=pd.read_csv('ReviewContent.csv')
mask=review["Room Type"]== "Private room"
print(review[mask])
print(mask)
print(type(mask))
#burada mask değişkenine atadık tekrar tkrar yazmayalım printle diye
#mask=review["Room Type"]!= "Private room" burada room type private room olmayan satırları göster demek istiyoruz

#oda fiyatı 60 dan büyük 100 den küçük odaların satırlarını yazdır diyoruz burada.
mask1=review["Room Price"]>60
mask2=review["Room Price"]<100
mask=mask1 & mask2
print(review[mask])

# | veya ifadesini kullanacağız tek bir şart sağlansa bile okeyy
mask1=review["Room Price"]>100
mask2=review["Room Availability"]>300
mask=mask1 | mask2
print(review[mask])
#oda fiyatı 100 den yüksek veya oda kapasitesi 300den fazla olan satırları listeledik burada

#birden fazla or ' u ile birbirine bağlayabiliriz
mask=(review["City"]=="London") | (review["City"]=="Paris")
print(review[mask])

#işte taskten sutün ismini alıp isin metodu kullanrak parametreleri yazıp bunlar içinde mi diye sorabiliyoruz
mask=review["City"].isin(["London","Paris","Amsterdam","Paris"])
print(review[mask])

#between belirli değerler arasında herhangi bir range arasındaki değerler için kullanabiliyorurz.Paramaetrenin sınır değerleri de dahil buna
mask=review["Room Price"].between(60,100)
print(review[mask])

#betweeni tarihler arasında da kullanabiliyoruz
mask=review["Review Date"].between("2013-01-01","2014-01-01")
print(review[mask])
print(mask.sum())

review.sort_values("City",inplace=True)
#inplace true demek o üstüne doğru kaydet demek
print(review)
print()
#dublicated() metodu ilk olanı bastırır aynı değerden varsa artık true diye döndürür.Birden fazla aynı değerden olup olmadığına bakıyor
print(review.duplicated())
print()
mask=~review.duplicated()
#başına tilda işareti koyduğumda bana false olan değerleri yani ilk kez kullanılan değerleri verir.
print(review[mask])

#drop_dublicates fonksiyonu aynı olan verileri sil ama şu şekilde aynı olan satrıları siliyor ama ben parametrelerle bunun üstesinden gelebiliyrum
print(len(review.drop_duplicates))
print(len(review.drop_duplicates(subset=["City"])))
#tek bir şehir ifadesi kullanılan satırların sayısını vericek olan kod satırı

#unique ve nununique
print(review["City"])
#city sutünunu bize dönüyor şuan bu kod
print(review["City"].unique())
#o sutüne kullanılan verileri teker teker dönüyor
print(type(review["City"].unique()))
#tek boyutlu numpy.ndarray dönüyor bize
print(review["City"].nunique())
#bize direkt syısını veriyor değerleri döndürmüyor

