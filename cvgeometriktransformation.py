# -*- coding: utf-8 -*-
"""CVGeometrikTransformation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1snMCseqS_OUAjTeK2ESeIkjFkSyEywrc
"""

from google.colab import files

uploaded=files.upload()

#opencv2 yi import ettim
import cv2

#opencv'nin gösterme fonkisyonunu çalıştırmak için özel yöntem
from google.colab.patches import cv2_imshow

file_name=list(uploaded.keys())[0]
image=cv2.imread("hik.jpg")

cv2_imshow(image)

#görüntüyü gri tonlamaya çevirme
## Gri tonlamalı formata dönüştürmek için OpenCV fonksiyonu kullanıyoruz.
gray_image=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)

# Gri tonlamalı görüntüyü gösteriyoruz.
cv2_imshow(gray_image)

#Görüntüyle oynama
#Image Rotation

#Görüntünün boyutlarını ve merkezini hesaplıyoruz
# Görüntü yüksekliği (h) ve genişliği (w).
(h,w)=image.shape[:2]
# Görüntünün merkezi.
center=(w//2,h//2)

# Döndürme matrisi oluşturuyoruz. 45 derece döndürmek ve ölçeği 1.0 olarak tutmak için.
rotation_matrix=cv2.getRotationMatrix2D(center,45,1.0)

# Görüntüyü döndürüyoruz.
rotated_image=cv2.warpAffine(image,rotation_matrix,(w,h))

# Döndürülmüş görüntüyü gösteriyoruz.
cv2_imshow(rotated_image)

#Görüntüyü ölçeklendiriyoruz. fx ve fy ölçekleme faktörlerini temsil eder.
 scaled_image=cv2.resize(image,None,fx=1.5,fy=1.5,interpolation=cv2.INTER_CUBIC)

# Ölçeklendirilmiş görüntüyü gösteriyoruz.
cv2_imshow(scaled_image)

#Görüntüyü Yansıma (Flip) İşlemi
# X eksenine göre yansıtma
flipped_image_x=cv2.flip(image,0)  #0 , x eksenine göre yansımayı temsil eder

# Y eksenine göre yansıtma

flipped_image_y=cv2.flip(image,1)

cv2_imshow(flipped_image_x)
cv2_imshow(flipped_image_y)