# -*- coding: utf-8 -*-
"""XGB XGBoost Boosting Sınıflandırma Modeli.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QeUk_iNPq-I08hbXC4XoxxxA-7qVMQ9A
"""

#Boosting ağaç sürekli kendini geliştirerek yeni ağaçlar oluşturuyor.Bu şekilde en iyi ağacı bulmaya çalışıyoruz

import pandas as pd ; import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
import xgboost as xgb
from sklearn.model_selection import train_test_split

df =pd.read_csv('heart.csv')
df.head(3)

y=df['output']
x=df.drop('output',axis=1)

x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.7,random_state=42)

#overfitting kurduğu için sonuç 1 çıkıcak %100 yani
dt=DecisionTreeClassifier()
model=dt.fit(x,y)
model.score(x,y)

#DecisionTree kullanarak skora bakıyoruz
dt=DecisionTreeClassifier()
model=dt.fit(x_train,y_train)
model.score(x_test,y_test)

#RandomForest kullanarak skora bakıyoruz
rf=RandomForestClassifier(n_estimators=200)
model=rf.fit(x_train,y_train)
model.score(x_test,y_test)

#Boosting kullanarak skora baktım
xgb=xgb.XGBClassifier()
model=xgb.fit(x_train,y_train)
model.score(x_test,y_test)

#Veri sayısına baktık
df.shape